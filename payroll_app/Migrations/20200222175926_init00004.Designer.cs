// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using payroll_app.Data;

namespace payroll_app.Migrations
{
    [DbContext(typeof(payroll_app_context))]
    [Migration("20200222175926_init00004")]
    partial class init00004
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("payroll_app.Models.repository.AttendanceRegister", b =>
                {
                    b.Property<int>("AttendanceRegisterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Attendance Register Id");

                    b.Property<bool>("Attendance");

                    b.Property<DateTime>("AttendanceTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("AttendanceTime");

                    b.Property<int>("EmployeeId")
                        .HasColumnName("Attendance Register Id");

                    b.Property<string>("Id");

                    b.HasKey("AttendanceRegisterId");

                    b.HasIndex("Id");

                    b.ToTable("AttendanceRegister");
                });

            modelBuilder.Entity("payroll_app.Models.repository.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Category Id");

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasColumnName("Category Code");

                    b.Property<string>("CategoryFormula")
                        .HasColumnName("Category Formula");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnName("Category Name");

                    b.HasKey("CategoryId");

                    b.HasAlternateKey("CategoryCode");

                    b.HasAlternateKey("CategoryName");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("payroll_app.Models.repository.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Department Id");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnName("Department Code");

                    b.Property<string>("DepartmentFormula")
                        .HasColumnName("Department Formula");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnName("Department Name");

                    b.HasKey("DepartmentId");

                    b.HasAlternateKey("DepartmentCode");

                    b.HasAlternateKey("DepartmentName");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("payroll_app.Models.repository.Designation", b =>
                {
                    b.Property<int>("DesignationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Designation Id");

                    b.Property<string>("DesignationCode")
                        .IsRequired()
                        .HasColumnName("Designation Code");

                    b.Property<string>("DesignationFormula")
                        .HasColumnName("Designation Formula");

                    b.Property<string>("DesignationName")
                        .IsRequired()
                        .HasColumnName("Designation Name");

                    b.HasKey("DesignationId");

                    b.HasAlternateKey("DesignationCode");

                    b.HasAlternateKey("DesignationName");

                    b.ToTable("Designation");
                });

            modelBuilder.Entity("payroll_app.Models.repository.Employee", b =>
                {
                    b.Property<string>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Employee Id");

                    b.Property<string>("AadharNo")
                        .IsRequired()
                        .HasColumnName("Aadhar No")
                        .HasMaxLength(12);

                    b.Property<bool>("Active");

                    b.Property<string>("AdultRegistrationNo")
                        .HasColumnName("Adult Registration No");

                    b.Property<int>("Category");

                    b.Property<string>("CurrentAddress")
                        .IsRequired()
                        .HasColumnName("Current Address")
                        .HasMaxLength(1200);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnName("Date Of Birth");

                    b.Property<int>("Department");

                    b.Property<int>("Designation");

                    b.Property<string>("EmailId")
                        .HasColumnName("Email Id")
                        .HasMaxLength(400);

                    b.Property<string>("EmployeeCode")
                        .HasColumnName("Employee Code");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnName("Employee Name")
                        .HasMaxLength(200);

                    b.Property<byte[]>("EmployeePhoto")
                        .HasColumnName("Employee Photo");

                    b.Property<string>("FatherOrHusbandName")
                        .HasColumnName("Father Or Husband Name")
                        .HasMaxLength(200);

                    b.Property<string>("Gender")
                        .HasColumnName("Gender")
                        .HasMaxLength(20);

                    b.Property<int>("Grade");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnName("Join Date");

                    b.Property<DateTime>("LastWorkingDate")
                        .HasColumnName("Last Working Date");

                    b.Property<string>("MobileNo")
                        .HasColumnName("Mobile No")
                        .HasMaxLength(10);

                    b.Property<string>("Nominee")
                        .HasColumnName("Nominee")
                        .HasMaxLength(200);

                    b.Property<string>("OffDay");

                    b.Property<string>("PanNo")
                        .HasColumnName("Pan No");

                    b.Property<string>("PermanentAddress")
                        .IsRequired()
                        .HasColumnName("Permanent Address")
                        .HasMaxLength(1200);

                    b.Property<string>("PfNo")
                        .HasColumnName("Pf No");

                    b.Property<int>("Shift");

                    b.HasKey("EmployeeId");

                    b.HasAlternateKey("AadharNo");

                    b.HasIndex("Category");

                    b.HasIndex("Department");

                    b.HasIndex("Designation");

                    b.HasIndex("Grade");

                    b.HasIndex("Shift");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("payroll_app.Models.repository.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Grade Id");

                    b.Property<string>("GradeCode")
                        .IsRequired()
                        .HasColumnName("Grade Code")
                        .HasMaxLength(30);

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasColumnName("Grade Name")
                        .HasMaxLength(30);

                    b.HasKey("GradeId");

                    b.HasAlternateKey("GradeCode");

                    b.HasAlternateKey("GradeName");

                    b.HasAlternateKey("GradeCode", "GradeId", "GradeName");

                    b.ToTable("Grade");
                });

            modelBuilder.Entity("payroll_app.Models.repository.Shift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ShiftId");

                    b.Property<string>("ShiftCode")
                        .IsRequired()
                        .HasColumnName("ShiftCode");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasColumnName("ShiftName");

                    b.Property<DateTime>("ShiftTimeIn")
                        .HasColumnName("ShiftTimeIn");

                    b.Property<DateTime>("ShiftTimeOut")
                        .HasColumnName("ShiftTimeOut");

                    b.Property<TimeSpan>("TimeSpanz")
                        .HasColumnName("ShiftTimeSpan");

                    b.HasKey("ShiftId");

                    b.HasAlternateKey("ShiftCode");

                    b.HasAlternateKey("ShiftName");

                    b.HasAlternateKey("ShiftCode", "ShiftId", "ShiftName");

                    b.ToTable("Shift");
                });

            modelBuilder.Entity("payroll_app.Models.repository.AttendanceRegister", b =>
                {
                    b.HasOne("payroll_app.Models.repository.Employee", "Employees")
                        .WithMany("AttendanceRegisters")
                        .HasForeignKey("Id");
                });

            modelBuilder.Entity("payroll_app.Models.repository.Employee", b =>
                {
                    b.HasOne("payroll_app.Models.repository.Category", "Categories")
                        .WithMany("Employees")
                        .HasForeignKey("Category")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("payroll_app.Models.repository.Department", "Departments")
                        .WithMany("Employees")
                        .HasForeignKey("Department")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("payroll_app.Models.repository.Designation", "Designations")
                        .WithMany("Employees")
                        .HasForeignKey("Designation")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("payroll_app.Models.repository.Grade", "Grades")
                        .WithMany("Employees")
                        .HasForeignKey("Grade")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("payroll_app.Models.repository.Shift", "Shifts")
                        .WithMany("Employees")
                        .HasForeignKey("Shift")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
